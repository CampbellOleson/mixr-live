{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/AudioBank.js","webpack:///./src/Player.js","webpack:///./src/Recorder.js","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAA8B;;AAE9B,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,+CAAM;AAChB,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;ACjEzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kEAAkE,WAAW;AAC7E,4DAA4D,WAAW;AACvE,sDAAsD,WAAW;AACjE,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;;AAEA;AACA;AACA,2BAA2B,WAAW;AACtC;;AAEA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC/JtB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,cAAc;AACzE;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,WAAW;AAChC;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACzCxB;AAAA;AAAA;AAAA;AAAkC;AACJ;AACM;AACpC;AACA;;AAEA,qBAAqB,iDAAQ;AAC7B,iBAAiB,kDAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,+CAAM;AACvB,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Player from \"./Player\";\n\nfunction AudioBank(bank = {}) {\n  this.bank = bank;\n}\n\nAudioBank.prototype.save = async function(file, title) {\n  const url = URL.createObjectURL(file);\n  fetch(url).then(res => {\n    res.blob().then(blob => {\n      const reader = new FileReader();\n      reader.onloadend = e => {\n        const AudioBank =\n          localStorage[\"AudioBank\"] && localStorage[\"AudioBank\"] != \"undefined\"\n            ? JSON.parse(localStorage[\"AudioBank\"])\n            : {};\n        const dataURI = e.currentTarget.result;\n        AudioBank[title] = dataURI;\n        localStorage.setItem(\"AudioBank\", JSON.stringify(AudioBank));\n      };\n      reader.readAsDataURL(blob);\n    });\n  });\n  this.update();\n};\n\nAudioBank.prototype.update = function() {\n  if (localStorage[\"AudioBank\"] && localStorage[\"AudioBank\"] != \"undefined\") {\n    this.bank = JSON.parse(localStorage[\"AudioBank\"]);\n  }\n};\n\nAudioBank.prototype.listTracks = function() {\n  const ul = document.getElementById(\"tracksList\");\n  this.update();\n  Object.keys(this.bank).forEach((title, idx) => {\n    const li = document.createElement(\"LI\");\n    const p = document.createElement(\"P\");\n    p.textContent = title;\n    li.appendChild(p);\n    li.setAttribute(\"key\", idx);\n    li.setAttribute(\"id\", title);\n    li.addEventListener(\"click\", () => {\n      new Player(title, _arrayBufferToFile(this.bank[title]), idx);\n    });\n    ul.appendChild(li);\n  });\n};\n\nfunction _arrayBufferToFile(uri) {\n  const arrayBuffer = _base64ToArrayBuffer(uri);\n  const file = new File([arrayBuffer], \"success\");\n  return file;\n}\n\nfunction _base64ToArrayBuffer(base64) {\n  var binary_string = window.atob(base64.split(\",\")[1]);\n  var len = binary_string.length;\n  var bytes = new Uint8Array(len);\n  for (var i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nexport default AudioBank;\n","function Player(title, audioFile) {\n  this.title = title;\n  this.audioFile = audioFile;\n  this.audio = null;\n  this.instantiateAudio();\n  this.incarnate();\n}\n\nPlayer.prototype.instantiateAudio = function() {\n  this.audio = new Audio(URL.createObjectURL(this.audioFile));\n};\n\nPlayer.prototype.seekAudio = function(durationSlider, duration) {\n  this.audio.currentTime = durationSlider.value;\n  duration.textContent = convertTime(this.audio.currentTime);\n};\n\nPlayer.prototype.adjVolume = function(volumeSlider) {\n  this.audio.volume = volumeSlider.value;\n};\n\nPlayer.prototype.play = function() {\n  const durationSlider = document.getElementById(`durationSlider${this.title}`);\n  const currentTime = document.getElementById(`currentTime${this.title}`);\n  const duration = document.getElementById(`duration${this.title}`);\n  const volume = document.getElementById(`volumeSlider${this.title}`);\n  setInterval(\n    () => updateDurationSlider(this.audio, durationSlider, currentTime),\n    1000\n  );\n  this.audio.volume = volume.value;\n  showDuration(this.audio, durationSlider, duration);\n  this.audio.play();\n};\n\nPlayer.prototype.togglePlay = function() {\n  if ((this.audio && this.audio.paused) || this.audio.ended) {\n    this.play();\n    console.log(\"playing\");\n  } else {\n    this.audio.pause();\n    console.log(\"paused\");\n  }\n};\n\nPlayer.prototype.configureClass = function(playButton) {\n  if ((this.audio && this.audio.paused) || this.audio.ended) {\n    playButton.classList.remove(\"pause-button\");\n  } else {\n    playButton.classList.add(\"pause-button\");\n  }\n};\n\nPlayer.prototype.incarnate = function() {\n  const ul = document.getElementById(\"players\");\n\n  const audioPlayerDiv = document.createElement(\"DIV\");\n  audioPlayerDiv.className = \"audio-player\";\n\n  const trackTitle = document.createElement(\"DIV\");\n  trackTitle.textContent = this.title;\n  trackTitle.className = \"player-track-title\";\n  audioPlayerDiv.appendChild(trackTitle);\n\n  const horDiv = document.createElement(\"DIV\");\n  horDiv.className = \"horizontal-track-div\";\n  audioPlayerDiv.appendChild(horDiv);\n\n  const timeDurationCont = document.createElement(\"DIV\");\n  timeDurationCont.className = \"time-duration-cont\";\n  horDiv.appendChild(timeDurationCont);\n\n  const playButton = document.createElement(\"BUTTON\");\n  playButton.className = \"play-button\";\n  playButton.id = `playButton${this.title}`;\n  playButton.addEventListener(\"click\", () => {\n    this.togglePlay();\n    this.configureClass(playButton);\n  });\n  timeDurationCont.appendChild(playButton);\n\n  const currentTime = document.createElement(\"DIV\");\n  currentTime.className = \"current-time\";\n  currentTime.id = `currentTime${this.title}`;\n  currentTime.textContent = \"00:00\";\n  timeDurationCont.appendChild(currentTime);\n\n  const duration = document.createElement(\"DIV\");\n  duration.className = \"duration\";\n  duration.id = `duration${this.title}`;\n  duration.textContent = \"00:00\";\n\n  const durationSlider = document.createElement(\"INPUT\");\n  durationSlider.className = \"slider duration-slider\";\n  durationSlider.id = `durationSlider${this.title}`;\n  durationSlider.addEventListener(\"change\", () => {\n    this.seekAudio(durationSlider, duration);\n  });\n\n  durationSlider.setAttribute(\"type\", \"range\");\n  durationSlider.setAttribute(\"value\", \"0\");\n  durationSlider.setAttribute(\"min\", \"0\");\n  durationSlider.setAttribute(\"step\", \"1\");\n  timeDurationCont.appendChild(durationSlider);\n  timeDurationCont.appendChild(duration);\n\n  const volumeSliderCont = document.createElement(\"DIV\");\n  volumeSliderCont.className = \"volume-slider-cont\";\n  horDiv.appendChild(volumeSliderCont);\n\n  const volImg1 = document.createElement(\"IMG\");\n  volImg1.className = \"volume-icon\";\n  volImg1.setAttribute(\"src\", \"../src/public/mute-icon.png\");\n  volumeSliderCont.appendChild(volImg1);\n\n  const volumeSlider = document.createElement(\"INPUT\");\n  volumeSlider.className = \"slider volume-slider\";\n  volumeSlider.id = `volumeSlider${this.title}`;\n  volumeSlider.addEventListener(\"change\", () => {\n    this.adjVolume(volumeSlider);\n  });\n  volumeSlider.setAttribute(\"type\", \"range\");\n  volumeSlider.setAttribute(\"min\", \"0\");\n  volumeSlider.setAttribute(\"max\", \"1\");\n  volumeSlider.setAttribute(\"value\", \"0.5\");\n  volumeSlider.setAttribute(\"step\", \"0.01\");\n  volumeSliderCont.appendChild(volumeSlider);\n\n  const volImg2 = document.createElement(\"IMG\");\n  volImg2.className = \"volume-icon\";\n  volImg2.setAttribute(\"src\", \"../src/public/white-volume.png\");\n  volumeSliderCont.appendChild(volImg2);\n\n  ul.appendChild(audioPlayerDiv);\n};\n\nfunction convertTime(sec) {\n  let min = Math.floor(sec / 60);\n  let seconds = sec % 60;\n  min = min < 10 ? \"0\" + min : min;\n  seconds = sec < 10 ? \"0\" + seconds : seconds;\n  return min + \":\" + seconds;\n}\n\nasync function updateDurationSlider(audio, durationSlider, currentTime) {\n  const sec = Math.round(audio.currentTime);\n  durationSlider.value = sec;\n  currentTime.textContent = convertTime(sec);\n}\n\nasync function showDuration(audio, durationSlider, duration) {\n  while (audio.duration === Infinity) {\n    await new Promise(r => setTimeout(r, 1000));\n  }\n  const d = Math.floor(audio.duration);\n  durationSlider.setAttribute(\"max\", d);\n  duration.textContent = convertTime(d);\n}\n\nexport default Player;\n","function Recorder() {\n  this.stream = null;\n  this.recorder = null;\n  this.audioBits = [];\n  this.audioUrl = null;\n  this.audioFile = null;\n  this.audio = null;\n  this.state = null;\n}\n\nRecorder.prototype.extractAudioFile = function() {\n  const audioBlob = new Blob(this.audioBits);\n  // this.audioUrl = URL.createObjectURL(audioBlob);\n  this.audioFile = new File([audioBlob], \"audio\");\n  console.log(this.audioFile);\n  return this.audioFile;\n};\n\nRecorder.prototype.startStream = async function() {\n  this.stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n  this.recorder = new MediaRecorder(this.stream);\n  this.state = this.recorder.state;\n  this.recorder.addEventListener(\"dataavailable\", event => {\n    this.audioBits.push(event.data);\n  });\n};\n\nRecorder.prototype.toggleRecord = function() {\n  if (this.state === \"inactive\") {\n    this.recorder.start();\n    this.state = this.recorder.state;\n  } else {\n    this.recorder.stop();\n    this.state = this.recorder.state;\n  }\n};\n\nRecorder.prototype.yieldClass = function() {\n  return `recorder-${this.state}`;\n};\n\nexport default Recorder;\n","import Recorder from \"./Recorder\";\nimport Player from \"./Player\";\nimport AudioBank from \"./AudioBank\";\nconst recordButton = document.getElementById(\"recordButton\");\nconst saveButton = document.getElementById(\"saveButton\");\n\nconst recorder = new Recorder();\nconst bank = new AudioBank();\nbank.listTracks();\nlet player;\nlet currentTrack;\n\nrecorder.startStream().then(() => {\n  recorder.recorder.addEventListener(\"stop\", () => {\n    currentTrack = recorder.extractAudioFile();\n    player = new Player(null, currentTrack, 0);\n  });\n});\n\nrecordButton.addEventListener(\"click\", () => {\n  recorder.toggleRecord();\n  recordButton.className = recorder.yieldClass.bind(recorder)();\n});\n\nsaveButton.addEventListener(\"click\", () => {\n  const trackTitle = document.getElementById(\"trackTitleInput\").value;\n  document.getElementById(\"trackTitleInput\").value = \"\";\n  bank.save(currentTrack, trackTitle);\n});\n"],"sourceRoot":""}